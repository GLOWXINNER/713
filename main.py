from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ParseMode
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import validators
import re

# –ó–∞–º–µ–Ω–∏—Ç–µ TOKEN –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = "7715066464:AAES118WE5-c6z9gbsBhUpO8bkpUOjXDfkg"
CHANNEL_ID = "@christmas_marathon"  # –£–∫–∞–∂–∏—Ç–µ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ @username
ADMIN_IDS = [6402145279]  # –£–∫–∞–∂–∏—Ç–µ ID –∞–¥–º–∏–Ω–æ–≤

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())


class PostCreation(StatesGroup):
    waiting_for_text = State()
    waiting_for_media = State()
    waiting_for_action = State()
    waiting_for_button = State()


def escape_markdown(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è Markdown V2, –∫—Ä–æ–º–µ —Ç–µ—Ö, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    return re.sub(r'([_\[\]()~>#+\-=|{}.!])', r'\\\1', text)


@dp.message_handler(commands=['start'], state='*')
async def start_command(message: types.Message):
    """
    –ö–æ–º–∞–Ω–¥–∞ /start. –°–æ–∑–¥–∞—ë—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º.
    """
    if message.from_user.id in ADMIN_IDS:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton("‚úâÔ∏è –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç"))
        keyboard.add(KeyboardButton("üîñ –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é", request_contact=False))
        keyboard.add(
            KeyboardButton("üóÇ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã"),
            KeyboardButton("üîó –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"),
            KeyboardButton("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
        )
        text = (
            "–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! ‚úÖ\n\n"
            "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ \"–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–π –ú–∞—Ä–∞—Ñ–æ–Ω\", –í–∞—à–µ–≥–æ —Å–ø—É—Ç–Ω–∏–∫–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ!\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—É–Ω–∫—Ç–æ–≤:\n\n"
            "üóÇ **–ú–∞—Ç–µ—Ä–∏–∞–ª—ã** - –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n\n"
            "üîó **–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏** - –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º.\n\n"
            "‚ùì **–ü–æ–¥–¥–µ—Ä–∂–∫–∞** - –ó–∞–¥–∞–≤–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å –≤–æ–ø—Ä–æ—Å—ã.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ø—É–Ω–∫—Ç, –∏ –º—ã –Ω–∞—á–Ω–µ–º –í–∞—à–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ! ‚ú®"
        )
        await message.answer(
            escape_markdown(text),
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN_V2
        )
    else:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(
            KeyboardButton("üóÇ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã"),
            KeyboardButton("üîó –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"),
            KeyboardButton("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
        )
        text = (
            "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ \"–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–π –ú–∞—Ä–∞—Ñ–æ–Ω\", –í–∞—à–µ–≥–æ —Å–ø—É—Ç–Ω–∏–∫–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ!\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—É–Ω–∫—Ç–æ–≤:\n\n"
            "üóÇ **–ú–∞—Ç–µ—Ä–∏–∞–ª—ã** - –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n\n"
            "üîó **–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏** - –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º.\n\n"
            "‚ùì **–ü–æ–¥–¥–µ—Ä–∂–∫–∞** - –ó–∞–¥–∞–≤–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å –≤–æ–ø—Ä–æ—Å—ã.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ø—É–Ω–∫—Ç, –∏ –º—ã –Ω–∞—á–Ω–µ–º –í–∞—à–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ! ‚ú®"
        )
        await message.answer(
            escape_markdown(text),
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN_V2
        )


@dp.message_handler(lambda message: message.text == "üóÇ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", state='*')
async def materials_menu(message: types.Message):
    """
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ ¬´–ú–∞—Ç–µ—Ä–∏–∞–ª—ã¬ª –≤—ã–≤–æ–¥–∏–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ (–¢–µ–∫—Å—Ç, –ê—É–¥–∏–æ, –í–∏–¥–µ–æ).
    """
    # –°–æ–∑–¥–∞—ë–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(
        InlineKeyboardButton("üìö –¢–µ–∫—Å—Ç–æ–≤—ã–π", callback_data="materials_text"),
        InlineKeyboardButton("üéß –ê—É–¥–∏–æ", callback_data="materials_audio"),
        InlineKeyboardButton("üé• –í–∏–¥–µ–æ", callback_data="materials_video"),
    )

    await message.answer(
        "üîñ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:",
        reply_markup=markup
    )


#
# ---- –ù–∏–∂–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º —Å–ø–∏—Å–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–∞–∂–¥—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫
#

# –ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
TEXT_MATERIALS = [
    ("–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ü–∞—Ä—Å–∫–∏—Ö —á–∞—Å–æ–≤ –°–æ—á–µ–ª—å–Ω–∏–∫–∞", "https://telegra.ph/Tolkovanie-carskih-chasov-Sochelnika-01-06"),
    ("–î–µ—Å—è—Ç—å –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤ –æ –†–æ–∂–¥–µ—Å—Ç–≤–µ –•—Ä–∏—Å—Ç–æ–≤–æ–º", "https://telegra.ph/Desyat-prorochestv-o-Rozhdestve-Hristovom-01-06"),
    ("–†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ –≥–ª–∞–∑–∞–º–∏ –Ω–æ–≤–æ–º—É—á–µ–Ω–∏–∫–æ–≤", "https://telegra.ph/Rozhdestvo-Hristovo-glazami-novomuchenikov-01-06"),
    ("–ß—Ç–æ –±—ã–ª–æ –±—ã, –µ—Å–ª–∏ –±—ã –Ω–µ –±—ã–ª–æ –†–æ–∂–¥–µ—Å—Ç–≤–∞ –•—Ä–∏—Å—Ç–æ–≤–∞", "https://telegra.ph/CHto-bylo-by-esli-by-ne-bylo-Rozhdestva-Hristova-01-06"),
    ("–†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ –≤ –∂–∏–≤–æ–ø–∏—Å–∏", "https://telegra.ph/Rozhdestvo-Hristovo-v-zhivopisi-01-06"),
    ("–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω—ã—Ö –ø–µ—Å–Ω–æ–ø–µ–Ω–∏–π —Å–ª—É–∂–±—ã –†–æ–∂–¥–µ—Å—Ç–≤–∞", "https://telegra.ph/Tolkovanie-glavnyh-pesnopenij-sluzhby-Rozhdestva-01-06"),
    ("–ö–∞–∫ —Ä–∞–∑—É–º, —Å–µ—Ä–¥—Ü–µ –∏ –ø–æ–ª–∏—Ç–∏–∫–∞ –≥–æ—Ç–æ–≤–∏–ª–∏—Å—å –∫ –ü–µ—Ä–≤–æ–º—É –ü—Ä–∏—à–µ—Å—Ç–≤–∏—é –•—Ä–∏—Å—Ç–∞", "https://telegra.ph/Kak-razum-serdce-i-politika-gotovilis-k-Pervomu-Prishestviyu-Hrista-01-06"),
    ("–ó–∞—â–∏—Ç–Ω–∏–∫ –†–æ–∂–¥–µ—Å—Ç–≤–∞", "https://telegra.ph/Zashchitnik-Rozhdestva-01-06"),
    ("–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –º–∏—Ä–∞ –∫ –ø—Ä–∏—à–µ—Å—Ç–≤–∏—é –•—Ä–∏—Å—Ç–∞", "https://telegra.ph/Prigotovlenie-mira-k-prishestviyu-Hrista-01-06"),
    ("–ñ–∏–∑–Ω—å –ò–∏—Å—É—Å–∞ –•—Ä–∏—Å—Ç–∞ –≤ –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–∞—Ö –í–µ—Ç—Ö–æ–≥–æ –ó–∞–≤–µ—Ç–∞", "https://telegra.ph/ZHizn-Iisusa-Hrista-v-prorochestvah-Vethogo-Zaveta-01-06"),
    ("–û —á–µ–º –Ω–∞–¥–æ –¥—É–º–∞—Ç—å –Ω–∞ —Å–≤—è—Ç–∫–∞—Ö", "https://telegra.ph/O-chem-nado-dumat-na-svyatkah-01-06"),
    ("–ó–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ –∫—Ä–µ—Å—Ç–∞ –•—Ä–∏—Å—Ç–æ—Å –æ—Ç–∫—Ä—ã–ª –∑–∞—á–µ–º –û–Ω –†–æ–¥–∏–ª—Å—è.", "https://telegra.ph/Za-neskolko-minut-do-kresta-Hristos-otkryl-zachem-On-Rodilsya-01-09"),
    ("–†–æ–∂–¥–µ—Å—Ç–≤–æ –∏ –ì–æ–ª–≥–æ—Ñ–∞", "https://telegra.ph/Rozhdestvo-i-Golgofa-01-09"),
]

# –ü—Ä–∏–º–µ—Ä –∞—É–¥–∏–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥–∫–∞—Å—Ç—ã, mp3-—Ñ–∞–π–ª—ã –∏ —Ç.–¥.)
AUDIO_MATERIALS = [
    ("–ì—Ä–∏–≥–æ—Ä–∏–π –ë–æ–≥–æ—Å–ª–æ–≤. –°–ª–æ–≤–æ 38 –Ω–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ. –ß–∞—Å—Ç–∏ 1-4", "https://teletype.in/@glowxinner/5UwkloDAHkH"),
    ("–õ–µ–≤ –í–µ–ª–∏–∫–∏–π. –°–ª–æ–≤–∞ –Ω–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ. –°–ª–æ–≤–∞ 1-3", "https://teletype.in/@glowxinner/D2Jw84Xehzf"),
    ("–í–∞—Å–∏–ª–∏–π –í–µ–ª–∏–∫–∏–π. –ì–æ–º–∏–ª–∏—è –Ω–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ. –ì–ª–∞–≤—ã 4-6", "https://youtu.be/LqgQWxeZ3D8"),
    ("–õ–µ–≤ –í–µ–ª–∏–∫–∏–π. –°–ª–æ–≤–∞ –Ω–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ. –°–ª–æ–≤–æ 4", "https://youtu.be/DDBcdMceAvk"),
]

# –ü—Ä–∏–º–µ—Ä –≤–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Å—ã–ª–∫–∏ –Ω–∞ YouTube)
VIDEO_MATERIALS = [
     ("–ö—É—Ä—Å –ª–µ–∫—Ü–∏–π –æ –†–æ–∂–¥–µ—Å—Ç–≤–µ –•—Ä–∏—Å—Ç–æ–≤–æ–º", "https://teletype.in/@glowxinner/nLWAm3kw0KP"),
]


@dp.callback_query_handler(lambda c: c.data in ["materials_text", "materials_audio", "materials_video"])
async def process_materials_callback(callback_query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫: "–¢–µ–∫—Å—Ç–æ–≤—ã–π", "–ê—É–¥–∏–æ", "–í–∏–¥–µ–æ".
    –í—ã–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
    """
    data = callback_query.data

    if data == "materials_text":
        materials = TEXT_MATERIALS
        header = "üìö –¢–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:"
    elif data == "materials_audio":
        materials = AUDIO_MATERIALS
        header = "üéß –ê—É–¥–∏–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:"
    else:  # data == "materials_video"
        materials = VIDEO_MATERIALS
        header = "üé• –í–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
    markup = InlineKeyboardMarkup(row_width=1)
    for title, link in materials:
        markup.add(InlineKeyboardButton(title, url=link))

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    await callback_query.answer()  # –≤–∞–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å .answer(), —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await callback_query.message.answer(header, reply_markup=markup)


@dp.message_handler(lambda message: message.text == "üîó –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏", state='*')
async def create_article(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è ¬´–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏¬ª.
    """
    article_link_1 = "https://t.me/christmas_marathon"
    article_link_2 = "https://www.youtube.com/channel/UCHCU9CbRf859DheRK_o1vNA"
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("Telegram –∫–∞–Ω–∞–ª", url=article_link_1))
    markup.add(InlineKeyboardButton("YouTube", url=article_link_2))
    await message.answer("üì± –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:", reply_markup=markup)


@dp.message_handler(lambda message: message.text == "‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", state='*')
async def support_handler(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è ¬´–ü–æ–¥–¥–µ—Ä–∂–∫–∞¬ª.
    """
    support_link = "https://t.me/glowxinner"
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url=support_link))
    await message.answer("–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:", reply_markup=markup)


@dp.message_handler(lambda message: message.text == "üîñ –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é" and message.from_user.id in ADMIN_IDS, state='*')
async def create_article_admin(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω–∞: ¬´–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é¬ª.
    """
    article_link = "https://telegra.ph/"
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Ç–∞—Ç—å–∏", url=article_link))
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é –≤ Telegraph:", reply_markup=markup)


#
# --- –ù–∏–∂–µ –∏–¥—ë—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ---
#

@dp.message_handler(lambda message: message.text == "‚úâÔ∏è –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç" and message.from_user.id in ADMIN_IDS, state='*')
async def start_post_creation(message: types.Message):
    """
    –ê–¥–º–∏–Ω ‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞: –ø–µ—Ä–≤—ã–π —à–∞–≥, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç.
    """
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:")
    await PostCreation.waiting_for_text.set()


@dp.message_handler(state=PostCreation.waiting_for_text)
async def receive_post_text(message: types.Message, state: FSMContext):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–∏—ë–º—É –º–µ–¥–∏–∞.
    """
    escaped_text = escape_markdown(message.text)
    await state.update_data(post_text=escaped_text, buttons=[], media=None)
    await message.answer("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ \n(–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):")
    await PostCreation.waiting_for_media.set()


@dp.message_handler(commands=['skip'], state=PostCreation.waiting_for_media)
async def skip_media(message: types.Message, state: FSMContext):
    """
    –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–µ–¥–∏–∞.
    """
    await send_post_preview(message, state)


@dp.message_handler(content_types=['photo', 'video'], state=PostCreation.waiting_for_media)
async def receive_media(message: types.Message, state: FSMContext):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ state –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é.
    """
    if message.photo:
        media = message.photo[-1].file_id
        media_type = 'photo'
    elif message.video:
        media = message.video.file_id
        media_type = 'video'
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ.")
        return

    await state.update_data(media={"type": media_type, "file_id": media})
    await send_post_preview(message, state)


async def send_post_preview(message: types.Message, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–∞ (—Å –º–µ–¥–∏–∞ –∏ –∫–Ω–æ–ø–∫–∞–º–∏, –µ—Å–ª–∏ –µ—Å—Ç—å).
    """
    data = await state.get_data()
    text = data['post_text']
    buttons = data['buttons']
    media = data['media']

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
    if media:
        if media['type'] == 'photo':
            await bot.send_photo(
                chat_id=message.chat.id,
                photo=media['file_id'],
                caption=text,
                parse_mode=ParseMode.MARKDOWN_V2
            )
        elif media['type'] == 'video':
            await bot.send_video(
                chat_id=message.chat.id,
                video=media['file_id'],
                caption=text,
                parse_mode=ParseMode.MARKDOWN_V2
            )
    else:
        await message.answer(text, parse_mode=ParseMode.MARKDOWN_V2)

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–æ–º
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(
        InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", callback_data="add_button"),
        InlineKeyboardButton("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="edit_message"),
        InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish")
    )

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    await PostCreation.waiting_for_action.set()


@dp.callback_query_handler(state=PostCreation.waiting_for_action)
async def handle_action(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –∏–∑ –º–µ–Ω—é –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–∞.
    """
    action = callback_query.data
    if action == "add_button":
        await callback_query.message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ URL –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é \n–ù–∞–ø—Ä–∏–º–µ—Ä: Google, https://google.com")
        await PostCreation.waiting_for_button.set()
    elif action == "edit_message":
        await callback_query.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:")
        await PostCreation.waiting_for_text.set()
    elif action == "publish":
        await publish_post(callback_query.message, state)


@dp.message_handler(state=PostCreation.waiting_for_button)
async def add_inline_button(message: types.Message, state: FSMContext):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ (—Ç–µ–∫—Å—Ç, —Å—Å—ã–ª–∫–∞).
    """
    try:
        text, url = map(str.strip, message.text.split(",", 1))
        if not validators.url(url):
            await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'http://' –∏–ª–∏ 'https://'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            return

        async with state.proxy() as data:
            data['buttons'].append({"text": text, "url": url})

        await message.answer("–ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        await send_post_preview(message, state)
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ URL —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: 'Google, https://google.com'")


async def publish_post(message: types.Message, state: FSMContext):
    """
    –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ.
    """
    try:
        data = await state.get_data()
        text = data['post_text']
        buttons = data['buttons']
        media = data['media']

        markup = InlineKeyboardMarkup(row_width=1)
        for button in buttons:
            markup.add(InlineKeyboardButton(button['text'], url=button['url']))

        if media:
            if media['type'] == 'photo':
                await bot.send_photo(
                    chat_id=CHANNEL_ID,
                    photo=media['file_id'],
                    caption=text,
                    reply_markup=markup,
                    parse_mode=ParseMode.MARKDOWN_V2
                )
            elif media['type'] == 'video':
                await bot.send_video(
                    chat_id=CHANNEL_ID,
                    video=media['file_id'],
                    caption=text,
                    reply_markup=markup,
                    parse_mode=ParseMode.MARKDOWN_V2
                )
        else:
            await bot.send_message(
                chat_id=CHANNEL_ID,
                text=text,
                reply_markup=markup,
                parse_mode=ParseMode.MARKDOWN_V2
            )

        await message.answer("–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        await state.finish()
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)